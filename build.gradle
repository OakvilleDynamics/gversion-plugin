plugins {
    id 'groovy-gradle-plugin'
    id 'maven-publish'
    id 'com.gradle.plugin-publish' version '0.16.0'
    id 'com.diffplug.spotless' version '7.0.2'
}

group = 'com.oakvillerobotics.gversion'
version = '1.10.3.1'

repositories {
    mavenCentral()
    mavenLocal()
    jcenter()

    maven { url = "https://oss.sonatype.org/content/repositories/snapshots/" }
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

compileJava {
    // Output byte code compatible with Java 8
    options.compilerArgs += ["--release", "8"]
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/arttom/gradle-publish-package-example")
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            from(components.java)
        }
    }
}

pluginBundle {
    website = 'https://github.com/OakvilleDynamics/gversion-plugin'
    vcsUrl = 'https://github.com/OakvilleDynamics/gversion-plugin'
    tags = [
        'version',
        'git',
        'gradle',
        'auto generate',
        'auto code'
    ]
}

gradlePlugin {
    plugins {
        gversionPlugin {
            id = 'com.oakvillerobotics.gversion'
            displayName = 'GVersion Plugin'
            description = 'Auto-generates project version files from Git and Gradle at compile time'
            implementationClass = 'com.oakvillerobotics.GVersion'
        }
    }
}

wrapper {
    distributionType = Wrapper.DistributionType.BIN
    gradleVersion = '7.6.4'
}

spotless {
    groovy {
        // Use the default importOrder configuration
        importOrder()
        // removes semicolons at the end of lines
        removeSemicolons()
        // the Groovy Eclipse formatter extends the Java Eclipse formatter,
        // so it formats Java files by default (unless `excludeJava` is used).
        greclipse() // has its own section below

        // exclude Java files from formatting
        excludeJava()
        indentWithSpaces(2)
    }
    java {
        target fileTree('.') {
            include '**/*.java'
            exclude '**/build/**', '**/build-*/**', '**/bin/**'
        }
        toggleOffOn()
        googleJavaFormat()
        removeUnusedImports()
        trimTrailingWhitespace()
        endWithNewline()
    }
    groovyGradle {
        target fileTree('.') {
            include '**/*.gradle'
            exclude '**/build/**', '**/build-*/**'
        }
        greclipse()
        indentWithSpaces(4)
        trimTrailingWhitespace()
        endWithNewline()
    }
    format 'misc', {
        target fileTree('.') {
            include '**/*.md', '**/.gitignore'
            exclude '**/build/**', '**/build-*/**'
        }
        trimTrailingWhitespace()
        indentWithSpaces(2)
        endWithNewline()
    }
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
}
